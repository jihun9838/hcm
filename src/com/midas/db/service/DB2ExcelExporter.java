package com.midas.db.service;import java.io.FileOutputStream;import java.io.IOException;import java.sql.ResultSet;import java.sql.SQLException;import java.time.LocalDate;import java.time.LocalDateTime;import java.util.List;import java.util.Map;import org.apache.poi.ss.usermodel.Cell;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.xssf.usermodel.XSSFSheet;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import com.midas.db.SalaryResult;import com.midas.service.CommonServiceImpl;///**// * A simple Java program that exports data from database to Excel file.// * @author Nam Ha Minh// * (C) Copyright codejava.net// */public class DB2ExcelExporter {	//	public static void main(String[] args) {	//		new DB2ExcelExporter().export();	//	}	public void export(List _list) {		//		Class.forName("org.sqlite.JDBC");		//		Connection conn = DriverManager.getConnection("jdbc:sqlite:C:/자바취업반/exam.db");		//		Statement stmt = conn.createStatement();		//				//		final String sql = 		//				"SELECT * FROM student";		//				//		try {		//			Class.forName("org.sqlite.JDBC");		//		} catch (ClassNotFoundException e1) {		//			// TODO Auto-generated catch block		//			e1.printStackTrace();		//		}		//		String jdbcURL = "jdbc:sqlite:src/MIDAS_Project.db";		//        String username = "root";		//        String password = "password";		String excelFilePath = "SalaryResult.xlsx";		if(new CommonServiceImpl().CheckClassType(_list).equals("SalaryResult"))			excelFilePath = LocalDateTime.now().toString().replace(":", "") + "_SalaryResult.xlsx";		//		try (Connection connection = DriverManager.getConnection(jdbcURL/*, username, password)*/)) {		try {			//String sql = "SELECT * FROM Employee";			//Statement statement = connection.createStatement();			//ResultSet result = statement.executeQuery(sql);			XSSFWorkbook workbook = new XSSFWorkbook();			XSSFSheet sheet = workbook.createSheet("Reviewss");			writeHeaderLine(_list, sheet);			//writeDataLines(result, workbook, sheet);			writeDataLinesWithList(_list, workbook, sheet);			FileOutputStream outputStream = new FileOutputStream(excelFilePath);			workbook.write(outputStream);			// workbook.close();			//statement.close();//		} catch (SQLException e) {//			System.out.println("Datababse error:");//			e.printStackTrace();		} catch (IOException e) {			System.out.println("File IO error:");			e.printStackTrace();		}	}	private void writeHeaderLine(List _list, XSSFSheet sheet) {		Row headerRow = sheet.createRow(0);				int cellCount = 1;		if(new CommonServiceImpl().CheckClassType(_list).equals("SalaryResult")){			List<SalaryResult> list = _list;			Cell cell = headerRow.createCell(cellCount++);			cell.setCellValue("사원번호");			cell = headerRow.createCell(cellCount++);			cell.setCellValue("id");			cell = headerRow.createCell(cellCount++);			cell.setCellValue("year");						cell = headerRow.createCell(cellCount++);			cell.setCellValue("month");						cell = headerRow.createCell(cellCount++);			cell.setCellValue("salary");		}	}	private void writeDataLines(ResultSet result, XSSFWorkbook workbook,			XSSFSheet sheet) throws SQLException {		int rowCount = 1;		while (result.next()) {			String courseName = result.getString("사원번호");			String studentName = result.getString("id");			String rating = result.getString("pw");			String timestamp = result.getString("이름");			String comment = result.getString("생년월일");			Row row = sheet.createRow(rowCount++);			int columnCount = 0;			Cell cell = row.createCell(columnCount++);			cell.setCellValue(courseName);			cell = row.createCell(columnCount++);			cell.setCellValue(studentName);			//			cell = row.createCell(columnCount++);			//			//			CellStyle cellStyle = workbook.createCellStyle();			//			CreationHelper creationHelper = workbook.getCreationHelper();			//			cellStyle.setDataFormat(creationHelper.createDataFormat().getFormat("yyyy-MM-dd HH:mm:ss"));			//			cell.setCellStyle(cellStyle);			//			//			cell.setCellValue(timestamp);			//			//			cell = row.createCell(columnCount++);			//			cell.setCellValue(rating);			//			//			cell = row.createCell(columnCount);			//			cell.setCellValue(comment);		}	}	private void writeDataLinesWithList(List _list, XSSFWorkbook workbook,			XSSFSheet sheet) {		int rowCount = 1;		if(new CommonServiceImpl().CheckClassType(_list).equals("SalaryResult")){			List<SalaryResult> list = _list;			for(SalaryResult o : list){				Row row = sheet.createRow(rowCount++);				int columnCount = 0;				Cell cell = row.createCell(columnCount++);				cell.setCellValue(o.getNum());								cell = row.createCell(columnCount++);				cell.setCellValue(o.getId());				cell = row.createCell(columnCount++);				cell.setCellValue(o.getYear());				cell = row.createCell(columnCount++);				cell.setCellValue(o.getMonth());				cell = row.createCell(columnCount++);				cell.setCellValue(o.getSalary());			}						}	}		}